---
- name: Check nutanix_host is defined
  ansible.builtin.fail:
    msg: "the variable 'nutanix_host' must be defined."
  when:
    - nutanix_host is not defined
    - nutanix_host != ""

- name: Check nutanix_username is defined
  ansible.builtin.fail:
    msg: "the variable 'nutanix_username' must be defined."
  when:
    - nutanix_username is not defined
    - nutanix_username != ""

- name: Check nutanix_password is defined
  ansible.builtin.fail:
    msg: "the variable 'nutanix_password' must be defined."
  when:
    - nutanix_password is not defined
    - nutanix_password != ""

- name: Generate basic authorization string
  set_fact:
    nutanix_auth_string: "{{ nutanix_username }}:{{ nutanix_password }}"
  no_log: True
  when:
    - nutanix_username is defined
    - nutanix_username != ""
    - nutanix_password is defined
    - nutanix_password != ""

- name: Generate authorization header
  set_fact:
    nutanix_api_auth: "Basic {{ nutanix_auth_string | b64encode(encoding='ascii') }}"
  no_log: True
  when: nutanix_auth_string is defined

- name: Unset basic authorization string
  set_fact:
    nutanix_auth_string: ""
  no_log: True
  when: nutanix_auth_string is defined

- name: Test logon to API
  uri:
    url: "https://{{ nutanix_host }}:{{ nutanix_port }}/api/nutanix/v3/users/me"
    method: GET
    validate_certs: "{{ validate_certs }}"
    body_format: json
    headers:
      Authorization: "{{ nutanix_api_auth }}"
    status_code: 200
    return_content: yes
  register: nutanix_api_login
  ignore_errors: no

- name: Set Prism endpoint type
  set_fact:
    nutanix_endpoint_prism_type: "{{ nutanix_api_login.x_ntnx_env }}"
